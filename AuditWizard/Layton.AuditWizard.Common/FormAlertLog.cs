using System;
using System.Windows.Forms;
using Infragistics.Win.UltraWinGrid;
using Infragistics.Win.UltraWinGrid.ExcelExport;
using Layton.AuditWizard.DataAccess;

namespace Layton.AuditWizard.Common
{
	public partial class FormAlertLog : Layton.Common.Controls.ShadedImageForm
	{
		public DateTime StartDateTime
		{
			get { return dtpStartDateTime.DateTime; }
			set { dtpStartDateTime.DateTime = value; }
		}
		
		public int	AlertCount
		{
			get { return alertsDataSet.Tables[0].Rows.Count; }
		}
		
		public FormAlertLog(DateTime startDate)
		{
            Application.UseWaitCursor = false;

			InitializeComponent();

			SettingsDAO lwDataAccess = new SettingsDAO();
			cbShowNewAtStartup.Checked = lwDataAccess.GetSettingAsBoolean(DatabaseSettingsKeys.Setting_ShowNewAlertsAtStartup, false);

			// Populate the alerts 
			dtpStartDateTime.Value = startDate;
			
			// ...and populate the control
			Populate();
		}

		private void FormAlertLog_Load(object sender, EventArgs e)
		{
		}

		/// <summary>
		/// Called to (re)Populate the grid 
		/// </summary>
		private void Populate()
		{
			AlertList listAlerts = new AlertList();
			listAlerts.Populate(dtpStartDateTime.DateTime);

			// Add to the data set
			this.alertsDataSet.Tables[0].Rows.Clear();
			foreach (Alert alert in listAlerts)
			{
				alertsDataSet.Tables[0].Rows.Add(new object[] { alert			
															  , alert.AlertedOnDate
															  , alert.TypeAsString
															  , alert.CategoryAsString
															  , alert.Message
															  , alert.Field1
															  , alert.Field2
															  , alert.AlertName
															  , alert.AssetName } );
			}
		}

		private void bnDelete_Click(object sender, EventArgs e)
		{
			foreach (UltraGridRow row in alertsGridView.Selected.Rows)
			{
			    Alert alert = row.Cells[0].Value as Alert;
			    if (alert != null) alert.Delete();
			}
		    Populate();
		}


		#region Context Menu Handlers


		/// <summary>
		/// Called to export the contents of the displayed grid to excel
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void ExportXlsToolStripMenuItem_Click(object sender, EventArgs e)
		{
			ExportToXLS();
		}


		/// <summary>
		/// Called to export the data from the grid to a PDF
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void ExportPDFToolStripMenuItem_Click(object sender, EventArgs e)
		{
			ExportToPDF();
		}

		/// <summary>
		/// Handle Export to XPS selected from the context menu
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void ExportXPSToolStripMenuItem_Click(object sender, EventArgs e)
		{
			ExportToXPS();
		}

		#endregion Context Menu Handlers

		#region Export Functions

		/// <summary>
		/// Export the graph data to an XLS format file
		/// </summary>
		public void ExportToXLS()
		{
			// If there are no rows in the grid then we cannot export
			if (this.alertsDataSet.Tables[0].Rows.Count == 0)
			{
				MessageBox.Show("There is no data to Export", "Export Error");
			}

			else
			{
                UltraGridExporter.ExportUltraGridToExcel(alertsGridView, "alertlog");
			}
		}


		/// <summary>
		/// Export to PDF
		/// </summary>
		public void ExportToPDF()
		{
			// If there are no rows in the grid then we cannot export
			if (this.alertsDataSet.Tables[0].Rows.Count == 0)
			{
				MessageBox.Show("There is no data to Export", "Export Error");
			}

			else
			{
				// We need to temporarily set the grid view to 'Resize all columns' in order to get
				// the resultant PDF file formatted correctly.
				AutoFitStyle oldStyle = alertsGridView.DisplayLayout.AutoFitStyle;
				alertsGridView.DisplayLayout.AutoFitStyle = AutoFitStyle.ResizeAllColumns;

				// First browse for the folder / file that we will save
				SaveFileDialog saveFileDialog = new SaveFileDialog();
                saveFileDialog.ValidateNames = false;
				saveFileDialog.FileName = "alertlog.pdf";
				saveFileDialog.Filter = "Adobe Acrobat Document (*.pdf)|*.pdf";

				if (saveFileDialog.ShowDialog(this) == DialogResult.OK)
				{
					UltraGridExporter.Export(saveFileDialog.FileName
											, "AuditWizard Alert Log"
											, "Generated by AuditWizard from Layton Technology, Inc."
											, DataStrings.Disclaimer
											, alertsGridView
											, Infragistics.Documents.Reports.Report.FileFormat.PDF);
					DesktopAlert.ShowDesktopAlert("Data successfully exported to '" + saveFileDialog.FileName + "'");
				}

				// Populate the old autofit style
				this.alertsGridView.DisplayLayout.AutoFitStyle = oldStyle;
			}
		}


		/// <summary>
		/// Export to XPS
		/// </summary>
		public void ExportToXPS()
		{
			// If there are no rows in the grid then we cannot export
			if (this.alertsDataSet.Tables[0].Rows.Count == 0)
			{
				MessageBox.Show("There is no data to Export", "Export Error");
			}

			else
			{
				// First browse for the folder / file that we will save
				SaveFileDialog saveFileDialog = new SaveFileDialog();
                saveFileDialog.ValidateNames = false;
				saveFileDialog.FileName = "alertlog.xps";
				saveFileDialog.Filter = "XML Paper Specification (*.xps)|*.xps";

				if (saveFileDialog.ShowDialog(this) == DialogResult.OK)
				{
					UltraGridExporter.Export(saveFileDialog.FileName
											, "AuditWizard Alert Log"
											, "Generated by AuditWizard from Layton Technology, Inc."
											, DataStrings.Disclaimer
											, alertsGridView
											, Infragistics.Documents.Reports.Report.FileFormat.XPS);
					DesktopAlert.ShowDesktopAlert("Data successfully exported to '" + saveFileDialog.FileName + "'");
				}
			}
		}

		#endregion Export Functions

		private void cbAlwaysShowLog_CheckedChanged(object sender, EventArgs e)
		{
			SettingsDAO lwDataAccess = new SettingsDAO();
			lwDataAccess.SetSetting(DatabaseSettingsKeys.Setting_ShowNewAlertsAtStartup, cbShowNewAtStartup.Checked);
		}

		private void dtpStartDateTime_ValueChanged(object sender, EventArgs e)
		{
			Populate();
		}
	}
}

